@*@using Microsoft.Marketplace.SaasKit.Models*@

@using Marketplace.SaaS.Accelerator.Services.Models
@model Marketplace.SaaS.Accelerator.Services.Models.SubscriptionResultExtension

@{
    ViewData["Title"] = "Cosmos Website Solutions, Customer Portal";
}
@if (!Model.ShowWelcomeScreen)
{
    <div class="pt-5" id="divHome">
        <div class="card p-3">

            <div class="text-center mb-4">
                <h5>Cosmos Website Solutions, Inc.</h5>
            </div>
            <form method="post" id="frmIndex">
                <div class="row justify-content-center">
                    <div class="col-md-6">
                        @if (Model != null && !string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger">
                                <strong>Error!</strong> Some Error Occurred During Operation!
                            </div>

                            <a class="btn btn-primary" href="/Home/CustomerSupport">Contact Customer Support</a>
                        }
                        else
                        {
                            <div class="card mb-3">
                                <div class="card-body">

                                    <h5 class="text-center">Thank you for subscribing!</h5>

                                    <p class="card-title">Subscription Details:</p>
                                    <dl class="row text-left">
                                        <dt class="col-sm-3 p-2 p10">
                                            @Html.DisplayName("Plan ")
                                        </dt>
                                        <dd class="col-sm-9 p-2">
                                            @switch (Model.PlanId)
                                            {
                                                case "single_website":
                                                    <p>Mars - Single Cosmos website</p>
                                                    break;
                                                case "jupiter_plan":
                                                    <p>Jupiter - Dedicated environment with up to 10 sites</p>
                                                    break;
                                                case "cosmos_lunar":
                                                    <p>("Solar - Dedicated, geo-redundant environment with up to 10 websites"</p>
                                                    break;
                                            }
                                        </dd>
                                        <dt class="col-sm-3 p-2 p10">
                                            @Html.DisplayName("Resource Name ")
                                        </dt>
                                        <dd class="col-sm-9 p-2">
                                            @Html.DisplayFor(model => model.Name)
                                        </dd>
                                        <dt class="col-sm-3 p-2 p10">
                                            @Html.DisplayName("Purchaser Email ")
                                        </dt>
                                        <dd class="col-sm-9 p-2">
                                            @Html.DisplayFor(model => model.Purchaser.EmailId)
                                            @Html.HiddenFor(model => model.Purchaser.EmailId)
                                        </dd>@*
                                <dt class="col-sm-3 p-2 p10">
                                @Html.DisplayName("Customer Email")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                @Html.DisplayFor(model => model.CustomerEmailAddress)
                                </dd> *@
                                        <dt class="col-sm-3 p-2 p10">
                                            @Html.DisplayName("Customer Name ")
                                        </dt>
                                        <dd class="col-sm-9 p-2">
                                            @Html.DisplayFor(model => model.CustomerName)
                                        </dd>
                                        @* <dt class="col-sm-3 p-2 p10">
                                @Html.DisplayName("ID ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                @Html.DisplayFor(model => model.Id)
                                </dd> *@
                                        <dt class="col-sm-3 p-2 p10">
                                            @Html.DisplayName("Status ")
                                        </dt>
                                        <dd class="col-sm-9 p-2">
                                            @if (Model.SaasSubscriptionStatus == SubscriptionStatusEnum.PendingFulfillmentStart)
                                            {
                                                <p>Pending setup</p>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(model => model.SubscriptionStatus)
                                            }
                                        </dd>

                                        <p class="text-center">Click the setup button below to continue.</p>
                                        @*  <dt class="col-sm-3 p-2 p10">
                                @Html.DisplayName("Azure Tenant ID ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                @Html.DisplayFor(model => model.Purchaser.TenantId)
                                @Html.HiddenFor(model => model.Purchaser.TenantId)
                                </dd> *@

                                        @if (Model.SubscriptionParameters != null && Model.SubscriptionParameters.Count() > 0)
                                        {

                                            for (int i = 0; i < Model.SubscriptionParameters.Count(); i++)
                                            {
                                                @Html.HiddenFor(model => model.SubscriptionParameters[i].Id)
                                                @Html.HiddenFor(model => model.SubscriptionParameters[i].PlanAttributeId)
                                                @Html.HiddenFor(model => model.SubscriptionParameters[i].ValueType)
                                                @Html.HiddenFor(model => model.SubscriptionParameters[i].PlanId)
                                                @Html.HiddenFor(model => model.SubscriptionParameters[i].OfferId)
                                                @Html.HiddenFor(model => model.SubscriptionParameters[i].SubscriptionId)
                                                @Html.HiddenFor(model => model.SubscriptionParameters[i].DisplayName)
                                                @Html.HiddenFor(model => model.SubscriptionParameters[i].Type)

                                                if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                                {
                                                    <dt class="col-sm-3 p-2 p10 @Model.SubscriptionParameters[i].Type">
                                                        @Html.DisplayFor(model => model.SubscriptionParameters[i].DisplayName, new { required = "required", @class = @Model.SubscriptionParameters[i].Type })
                                                        @if (Model.SubscriptionParameters[i].IsRequired == true)
                                                        {
                                                            <span class="red-star @Model.SubscriptionParameters[i].Type">*</span>
                                                        }


                                                    </dt>
                                                }
                                                else
                                                {
                                                    @if (Model.SubscriptionParameters[i].Type.ToLower() == "input")
                                                    {
                                                        <dt class="col-sm-3 p-2 p10 @Model.SubscriptionParameters[i].Type">
                                                            @Html.DisplayFor(model => model.SubscriptionParameters[i].DisplayName)
                                                        </dt>
                                                    }
                                                }

                                                @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                                {
                                                    @if (Model.SubscriptionParameters[i].FromList == true)
                                                    {
                                                        var data = Model.SubscriptionParameters[i].ValuesList;
                                                        var selectList = new SelectList(data.Split(','));


                                                        <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                                            {
                                                                @Html.DropDownList(string.Format("SubscriptionParameters[{0}].Value", @i), selectList, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @required = "required", name = string.Format("SubscriptionParameters[{0}].Value", @i), @id = string.Format("SubscriptionParameters_{0}__Value", @i) })

                                                            }
                                                            else
                                                            {
                                                                @Html.DropDownList(string.Format("SubscriptionParameters[{0}].Value", @i), selectList, new { @class = @Model.SubscriptionParameters[i].Type + " w200", name = string.Format("SubscriptionParameters[{0}].Value", @i), @id = string.Format("SubscriptionParameters_{0}__Value", @i) })

                                                            }

                                                        </dd>

                                                    }
                                                    else if (Model.SubscriptionParameters[i].Htmltype == "date")
                                                    {
                                                        <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                                            {
                                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @required = "required", @type = @Model.SubscriptionParameters[i].Htmltype })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @type = @Model.SubscriptionParameters[i].Htmltype })
                                                            }

                                                        </dd>
                                                    }
                                                    else
                                                    {
                                                        <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                                            {
                                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @required = "required", @type = @Model.SubscriptionParameters[i].Htmltype })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @type = @Model.SubscriptionParameters[i].Htmltype })
                                                            }

                                                        </dd>
                                                    }
                                                }
                                                else
                                                {
                                                    @if (Model.SubscriptionParameters[i].Type.ToLower() == "input")
                                                    {
                                                        <dd class="col-sm-9 p-2 p10  @Model.SubscriptionParameters[i].Type">
                                                            @Html.DisplayFor(model => model.SubscriptionParameters[i].Value)
                                                            @Html.HiddenFor(model => model.SubscriptionParameters[i].Value)
                                                        </dd>
                                                    }
                                                }
                                            }

                                        }

                                    </dl>
                                </div>
                            </div>
                            <div class="text-right">
                                @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.Subscribed)
                                {
                                    <button type="submit" asp-action="SubscriptionOperation" asp-route-subscriptionId="@Model.Id" asp-route-planId="@Model.PlanId" asp-route-operation="Deactivate" class="cm-button-danger text-right">Unsubscribe</button>
                                    <button type="submit" asp-action="Subscriptions" class="cm-button-default text-right">Go to Subscription List</button>
                                }
                                @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && Model.IsAutomaticProvisioningSupported == true)
                                {
                                    <a onclick="SubscriptionOperation('@Model.Id','@Model.PlanId','Activate')" id="btnActive" class="cm-button-default text-right">Activate</a>
                                }
                                @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && Model.IsAutomaticProvisioningSupported == false)
                                {
                                    <a onclick="SubscriptionOperation('@Model.Id','@Model.PlanId','Activate')" id="btnActive" class="btn btn-primary text-right">Setup Website <i class="fa-solid fa-circle-arrow-right"></i></a>
                                }
                            </div>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>
}
else
{
    <div class="pt-5">
        <div class="card p-3">
            <div class="text-center mb-4">
                <h5>Cosmos Website Solutions, Inc.</h5>
                <h3>Customer Subsription Portal</h3>
            </div>
            <div class="row">
                <div class="col-md-6">

                    <h2>Cosmos - Powerful made simple</h2>
                    <p>Cosmos is a state-of-the-art web content management system that comes with everything you need to build a modern website.</p>
                    <div class="mb-4 mt-1">
                        <a class="btn btn-primary" href="https://outlook.office365.com/owa/calendar/EricKauffmanCosmosWebsiteSolutions@moonrise.net/bookings/">Schedule a Demo</a>
                        <a class="btn btn-primary" href="/Home/CustomerSupport">Contact Customer Support</a>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <a class="btn btn-primary" href="/Home/Subscriptions">My Subscriptions</a>
                        }
                        else
                        {
                            <a class="btn btn-primary" href="https://www.cosmosws.io/products/pricing">Plans &amp; Pricing</a>
                        }
                    </div>
                    @if (!User.Identity.IsAuthenticated)
                    {
                        <p>Existing customers <a href="/Account/SignIn">please sign in</a>.</p>
                    }
                </div>
                <div class="col-md-6">
                    <img class="img-fluid" src="https://www.cosmosws.io/pub/articles/4/5dafafb5-d364-421b-9a62-9f9a4767388b.png">
                </div>
            </div>

        </div>
    </div>
}
<script type="text/javascript">

    function SubscriptionOperation(subscriptionId, planId, operation) {
        if (validate()) {
            var formobject = $('#frmIndex').serialize();
            $.ajax({
                url: '/Home/SubscriptionOperation',
                type: 'POST',
                data: formobject + "&subscriptionId=" + subscriptionId + "&planId=" + planId + "&operation=" + operation,
                cache: false,
                success: function (result) {
                    $('#divIndex').html(result);
                },
                Error:
                    function (result) {
                        $('#divIndex').html(result);
                    }
            });
        }
        else {
            swal({
                title: "Required",
                text: "Please fill all required values",
                icon: "warning"
            })

        }
    }


    function validate() {
        var valid = true;
        $(':input[required]:visible').each(function () {
            if ($(this).val() == "") //check loginc here
                return valid = false;
        });
        return valid;
    }
</script>